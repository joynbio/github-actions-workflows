name: Docker Build & Push

on:
  workflow_call:
    inputs:
      account:
        required: true
        type: string
      region:
        required: true
        type: string
      image_name:
        required: true
        type: string
      role_name:
        required: false
        type: string
        default: github-actions

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      DOCKER_BUILDKIT: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: where am i
      run: |
        pwd
        ls -la
        find . -name configure-aws-credentials-oidc.sh
    - uses: ./.github/actions/configure-aws-credentials-oidc@main
      with:
        account: ${{ inputs.account }}
        region: ${{ inputs.region }}
        role_name:  ${{ inputs.role_name }}
    - name: Configure AWS Credentials OIDC
      run: scripts/configure-aws-credentials-oidc.sh "${{inputs.account}}" "${{inputs.region}}" "${{inputs.role_name}}"
    # - name: Configure AWS Credentials OIDC
    #   run: |
    #     export AWS_ROLE_ARN=arn:aws:iam::${{ inputs.account }}:role/${{ inputs.role_name }}
    #     export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
    #     export AWS_DEFAULT_REGION=${{ inputs.region }}
    #     echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
    #     echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
    #     echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV
    #     curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
    #     aws sts get-caller-identity
    - name: Build and Push
      run: |
        short_hash=$(git rev-parse --short HEAD | cut -c-7)
        echo "short_hash=$short_hash"
        docker login -u AWS -p "$(aws ecr get-login-password --region ${{ inputs.region }})" ${{ inputs.account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com
        docker build . \
          -t "${{ inputs.account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.image_name }}:latest" \
          -t "${{ inputs.account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.image_name }}:$short_hash"
        docker push "${{ inputs.account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.image_name }}:latest"
        docker push "${{ inputs.account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ inputs.image_name }}:$short_hash"
